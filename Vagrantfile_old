num_instances = 2
Vagrant.configure("2") do |config|
    #config.ssh.insert_key = false
    config.vm.box = "ubuntu/focal64"
    config.vm.provider "virtualbox" do |v|
        v.memory = 2048
     #   v.cpus = 2
    end
      
    config.vm.define "k8s-master" do |master|
        #master.vm.box = IMAGE_NAME
        master.vm.network "private_network", ip: "192.168.56.10"
        master.vm.hostname = "k8s-master"
        #master.vm.provision "ansible" do |ansible|
        #    ansible.playbook = "kube-virtualbox/master-playbook.yml"
        #    ansible.extra_vars = {
        #        node_ip: "192.168.56.10",
        #    }
        #end

       config.trigger.after :up do
            system('kubectl -n kubernetes-dashboard create token admin-user')
       end
    end

    (1..num_instances).each do |i|
        config.vm.define "node-#{i}" do |node|
            #node.vm.box = IMAGE_NAME
            node.vm.network "private_network", ip: "192.168.56.#{i + 10}"
            node.vm.hostname = "node-#{i}"
            #node.vm.provision "ansible" do |ansible|
            #    ansible.playbook = "kube-virtualbox/node-playbook.yml"
            #    ansible.extra_vars = {
            #        node_ip: "192.168.56.#{i + 10}",
            #    }
            #end
        end
#config.trigger.after :up do |trigger|
#  trigger.info = "More information"
#  trigger.run = {inline: "bash -c 'echo \"hey there!!\" > file.txt'"}
#end
end
end
#     system('kubectl -n kubernetes-dashboard create token admin-user')
#     system("nohup kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='.*' </dev/null  >/dev/null 2>&1 &")
#     system('nohup xdg-open "http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/ingress?namespace=default" </dev/null  >/dev/null 2>&1 &')

#Vagrant.configure("2") do |config|
#  config.vm.provision "shell" do |s|
#    s.inline = "echo $1"
#    s.args   = "'hello, world!'"
#  end
#end

        #config.trigger.after :up do |trigger|
  #             #trigger.run = {inline: "kubectl -n kubernetes-dashboard create token admin-user"}
  #              trigger.only_on = box_info[box_info.length - 1][:host]
 #              trigger.run = {inline: "echo 'hello'"}
#       end

    end


